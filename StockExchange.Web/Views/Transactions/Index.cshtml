@model StockExchange.Web.Models.Transactions.AddTransactionViewModel
@using System.Web.Optimization

@{
    ViewBag.Title = "Transactions";
}

<div class="row">
    <div class="col-sm-5">
        <div id="transactions-table-container">

        </div>
    </div>
    <div class="col-sm-3">
        <div class="box box-success">
            <div class="box-header with-border">
                <h3 class="box-title">Add transaction</h3>
            </div>
            <div class="box-body col-sm-11 col-centered">
                @using (Html.BeginForm("AddTransaction", "Transactions", new { }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id="add-transaction-form" }))
                {
                    <div class="form-group">
                        <div class="col-sm-offset-1 col-sm-8">
                            @Html.EditorFor(item => Model.TransactionType, "EnumTemplate")
                        </div>
                    </div>

                    <div class="form-group has-feedback">
                        @Html.LabelFor(m => m.Companies, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8 input-group">
                            @Html.DropDownListFor(m => m.SelectedCompanyId, new SelectList(Model.Companies, "Id", "Name"), new { @class = "form-control" })
                            <span class="glyphicon form-control-feedback"></span>
                            @Html.ValidationMessageFor(m => m.SelectedCompanyId, null, new { @class = "help-block" })
                        </div>
                    </div>

                    <div class="form-group has-feedback">
                        @Html.LabelFor(m => m.Price, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8 input-group">
                            @Html.EditorFor(m => m.Price, null, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="glyphicon form-control-feedback"></span>
                            @Html.ValidationMessageFor(m => m.Price, null, new { @class = "help-block" })
                        </div>
                    </div>

                    <div class="form-group has-feedback">
                        @Html.LabelFor(m => m.Quantity, new { @class = "col-sm-4 control-label" })
                        <div class="col-sm-8 input-group">
                            <div class="col-sm-8 input-group">
                                @Html.EditorFor(m => m.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                <span class="glyphicon form-control-feedback"></span>
                                @Html.ValidationMessageFor(m => m.Quantity, null, new { @class = "help-block" })
                            </div>
                        </div>
                    </div>
 
                    <div class="form-group">
                        <button class="btn btn-success pull-right" id="add-transaction-button" type="submit">Add</button>
                    </div>
                }
            </div>
        </div>

    </div>
</div>

@section scripts
{
    <script>
        var config = {
            getTransactionsTableUrl: '@Url.Action("TransactionsTable")'
        };
    </script>
    @Scripts.Render("~/Scripts/views/transactionsView.js")
}
