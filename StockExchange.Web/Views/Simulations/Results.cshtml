@using System.Globalization
@using System.Web.Optimization
@using StockExchange.Common.Extensions
@using StockExchange.Web.Helpers
@model StockExchange.Web.Models.Simulation.SimulationResultViewModel

@{
    ViewBag.Title = "Simulation Results";
}

<div class="row">
    <div class="col-sm-6">
        <div id="simulationresult-table-container">
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Results</h3>
                </div>
                <div class="box-body">
                    <div class="table-responsive">
                        <table class="table no-margin">
                            <thead>
                                <tr>
                                    <th>Start budget</th>
                                    <th>Total simulation value</th>
                                    <th>Percentage profit</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>@Model.StartBudget</td>
                                    <td>@Model.TotalSimulationValue</td>
                                    <td>
                                        @if (@Model.PercentageProfit > 0)
                                        {
                                            <i class="fa fa-arrow-up icon-stock-up"></i>
                                            <span class="text-success">@Model.PercentageProfit%</span>
                                        }
                                        else
                                        {
                                            <i class="fa fa-arrow-down icon-stock-down"></i>
                                            <span class="text-danger">@Model.PercentageProfit%</span>
                                        }
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="table-responsive">
                        <table class="table no-margin">
                            <thead>
                            <tr>
                                <th></th>
                                <th>Date</th>
                                <th>Value</th>
                                <th>Percentage gain/loss</th>
                            </tr>
                            </thead>
                            <tbody>
                            @{
                                string gainDate = Model.MaximalGainOnTransaction?.TransactionDate.ToShortDateString() ?? "-";
                                string gainPercentage = (Model.MaximalGainOnTransaction?.PercentageIncome ?? 0.0) + "%";
                                string maxGainValue = ((Model.MaximalGainOnTransaction?.ValueAfter ?? 0m) - (Model.MaximalGainOnTransaction?.ValueBefore ?? 0m)).ToString(CultureInfo.InvariantCulture);
                                <tr>
                                    <th>Maximal gain on transaction</th>
                                    <td>@gainDate</td>
                                    <td>@maxGainValue</td>
                                    <td>
                                        <i class="fa fa-arrow-up icon-stock-up"></i>
                                        <span class="text-success">@gainPercentage</span>
                                    </td>
                                </tr>
                                string lossDate = Model.MaximalLossOnTransaction?.TransactionDate.ToShortDateString() ?? "-";
                                string lossPercentage = (Model.MaximalLossOnTransaction?.PercentageIncome ?? 0.0) + "%";
                                string maxLossValue = ((Model.MaximalLossOnTransaction?.ValueAfter ?? 0m) - (Model.MaximalLossOnTransaction?.ValueBefore ?? 0m)).ToString(CultureInfo.InvariantCulture);
                                <tr>
                                    <th>Maximal loss on transaction</th>
                                    <td>@lossDate</td>
                                    <td>@maxLossValue</td>
                                    <td>
                                        <i class="fa fa-arrow-down icon-stock-down"></i>
                                        <span class="text-danger">@lossPercentage</span>
                                    </td>
                                </tr>
                                string maximalDate = Model.MaximalSimulationValue?.Date.ToShortDateString();
                                string minimalDate = Model.MinimalSimulationValue?.Date.ToShortDateString();
                                string maxValuePercentage = (Model.MaximalSimulationValue?.PercentageIncome ?? 0.0) + "%";
                                string minValuePercentage = (Model.MinimalSimulationValue?.PercentageIncome ?? 0.0) + "%";
                                string maxValue = (Model.MaximalSimulationValue?.Value.ToString(CultureInfo.InvariantCulture) ?? "0");
                                string minValue = (Model.MinimalSimulationValue?.Value.ToString(CultureInfo.InvariantCulture) ?? "0");
                                <tr>
                                    <th>Maximal simulation value</th>
                                    <td>@maximalDate</td>
                                    <td>@maxValue</td>
                                    <td>
                                        <i class="fa fa-arrow-up icon-stock-up"></i>
                                        <span class="text-success">@maxValuePercentage</span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>Minimal simulation value</th>
                                    <td>@minimalDate</td>
                                    <td>@minValue</td>
                                    <td>
                                        <i class="fa fa-arrow-down icon-stock-down"></i>
                                        <span class="text-danger">@minValuePercentage</span>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                    <div class="table-responsive col-md-4" style="padding-left: 0">
                        <table class="table no-margin borderless">
                            <tbody>
                                @{
                                    string successes = Model.SuccessTransactionPercentage + "%";
                                    string losses = Model.FailedTransactionPercentage + "%";
                                    string keepStrategyProfit = (Model.KeepStrategyProfit / (double)Model.StartBudget * 100) + "%";
                                    <tr>
                                        <td><label>Successful transactions</label></td>
                                        <td><span class="text-success">@successes</span></td>
                                    </tr>
                                    <tr>
                                        <td><label>Failed transactions</label></td>
                                        <td><span class="text-danger">@losses</span></td>
                                    </tr>
                                    <tr>
                                        <td><label>Strategy Buy and Keep Result</label></td>
                                        <td><span class="text-danger">@keepStrategyProfit</span></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="clearfix"></div>
                    <div class="box-header with-border">
                        <h5>Stocks owned after simulation</h5>
                    </div>
                    <div class="table-responsive">
                        <table class="table no-margin">
                            <thead>
                                <tr>
                                    <th>Company Name</th>
                                    <th>Quantity</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transaction in Model.CurrentCompanyQuantity)
                                {
                                    <tr>
                                        <td>@transaction.Key.Code</td>
                                        <td>@transaction.Value</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-5">
        <div id="simulationlog-table-container">
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Transactions Log</h3>
                </div>
                <div class="box-body">
                    <div class="table-responsive">
                        <table id="simulation-transactions-grid" class="table table-hover table-stripe"
                               data-length-menu="[15, 25, 50]"
                               data-page-length="15"
                               data-ordering="false"
                               data-searching="false"
                               data-auto-width="false"
                               data-scroll-collapse="true"
                               data-processing="true"
                               data-server-side="false" @*TODO*@>
                            <thead>
                                <tr>
                                    <th data-column="date">@Html.DisplayNameFor(i => Model.TransactionsLog.FirstOrDefault().Date)</th>
                                    <th data-column="companyCode">@Html.DisplayNameFor(i => Model.TransactionsLog.FirstOrDefault().Company)</th>
                                    <th data-column="price">@Html.DisplayNameFor(i => Model.TransactionsLog.FirstOrDefault().Price)</th>
                                    <th data-column="quantity">@Html.DisplayNameFor(i => Model.TransactionsLog.FirstOrDefault().Quantity)</th>
                                    <th data-column="action">@Html.DisplayNameFor(i => Model.TransactionsLog.FirstOrDefault().Action)</th>
                                    <th data-column="budgetAfter">@Html.DisplayNameFor(i => Model.TransactionsLog.FirstOrDefault().BudgetAfter)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td colspan="5">
                                        <span>No data found...</span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        //TODO: this is a temporary solution, data should be loaded via AJAX and paged on the server
        var config = {
            transactionLogData: @Html.ToJsonString(Model.TransactionsLog.OrderBy(t => t.Date).Select(t => new
                                {
                                    Date = t.Date.ToShortDateString(),
                                    CompanyCode = t.Company.Code,
                                    Price =t.Price.ToString("0.00"),
                                    t.Quantity,
                                    Action = t.Action.ToString(),
                                    BudgetAfter = t.BudgetAfter.ToString("0.00")
                                }))
            };
    </script>

    @Scripts.Render("~/bundles/scripts/datatables")
    @Scripts.Render("~/Scripts/views/simulationResultsView.js")
}