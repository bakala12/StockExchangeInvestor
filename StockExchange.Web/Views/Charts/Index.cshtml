@model StockExchange.Web.Models.Charts.ChartsIndexModel
@using System.Web.Optimization
@using StockExchange.Web.Models.Indicator

@{
    ViewBag.Title = "Charts";
}
@section css
{
    @Styles.Render("~/Content/css/charts.css")
}

<div class="row">
    <div class="col-sm-2">
        <div>
            <span class="chart-options-wrapper">
                <span class="chart-option">Line</span>
                <label class="toggle">
                    <input type="checkbox" id="is-candlestick-chart">
                    <span class="handle"></span>
                </label>
                <span class="chart-option">Candlestick</span>
            </span>
        </div>
        <div class="form-group">
            <label>Companies</label>
            @* ReSharper disable once UnknownCssClass *@
            @Html.DropDownList("selectedCompanies", new MultiSelectList(Model.Companies, "Id", "Name",
                    new List<int> { Model.Companies.FirstOrDefault()?.Id ?? 0 }),
                    new { @class = "form-control company-select", multiple = "" })
        </div>
        <div class="form-group">
            <label>Indicator</label>
            @* ReSharper disable once UnknownCssClass *@
            @Html.DropDownList("Indicators", new SelectList(Model.Indicators, nameof(IndicatorViewModel.Type), nameof(IndicatorViewModel.Name)), "Select indicator",
                new { @class = "form-control indicator-select" })
        </div>
    </div>

    <div class="col-sm-10">
        <div id="chart-container"></div>
    </div>
</div>



@section scripts
{
    @Scripts.Render("~/bundles/scripts/highcharts")

    <script>
        var config = {
            getLineChartDataUrl: '@Url.Action("GetLineChartData")',
            getCandlestickDataUrl: '@Url.Action("GetCandlestickChartData")',
            getIndicatorValuesUrl: '@Url.Action("GetIndicatorValues")'
        };
    </script>
    @Scripts.Render("~/Scripts/Views/chartsView.js")
}